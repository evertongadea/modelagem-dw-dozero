INSERT INTO DIM_DATA
SELECT
TO_NUMBER(TO_CHAR(DATUM, 'yyyymmdd'), '99999999') AS SK_TEMPO,
DATUM AS DATA,
TO_CHAR(DATUM, 'dd/mm/yyyy') AS DATA_COMPLETA_FORMATADA,
EXTRACT(YEAR FROM DATUM) AS NR_ANO,
't' || TO_CHAR(DATUM, 'q') AS NM_TRIMESTRE,
TO_CHAR(DATUM, '"t"q/yyyy') AS NR_ANO_TRIMENSTRE,
EXTRACT(MONTH FROM DATUM) AS NR_MES,
TO_CHAR(DATUM, 'tmmonth') AS NM_MES,
TO_CHAR(DATUM, 'yyyy/mm') AS NR_ANO_NR_MES,
EXTRACT(WEEK FROM DATUM) AS NR_SEMANA,
TO_CHAR(DATUM, 'iyyy/iw') AS NR_ANO_NR_SEMANA,
EXTRACT(DAY FROM DATUM) AS NR_DIA,
EXTRACT(DOY FROM DATUM) AS NR_DIA_ANO,
TO_CHAR(DATUM, 'tmday') AS NM_DIA_SEMANA,
CASE WHEN EXTRACT(ISODOW FROM DATUM)
IN (6,
7) THEN
'sim'
ELSE
'não'
END AS FLAG_FINAL_SEMANA,
CASE WHEN TO_CHAR(DATUM, 'mmdd')
IN ('0101',
'1225') THEN
'sim'
ELSE
'não'
END AS FLAG_FERIADO,
CASE WHEN TO_CHAR(DATUM, 'mmdd') = '0101' THEN
'ano novo'
WHEN TO_CHAR(DATUM, 'mmdd') = '1225' THEN
'natal'
ELSE
'não é feriado'
END AS NM_FERIADO,
CURRENT_DATE AS DATA_CARGA
FROM (
SELECT
'2010-01-01'::DATE + SEQUENCE.DAY AS DATUM
FROM
GENERATE_SERIES(0, 5479) AS SEQUENCE (DAY)
GROUP BY
SEQUENCE.DAY) DQ
ORDER BY
1 DESC;